from aiogram import types, Bot, executor, Dispatcher
from gtts import gTTS
import random as rand
import os
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "5752210475:AAG22iNY1Hs6MFXzN3Zwy4I8fQPEAbpA8DM"

bot = Bot(TOKEN)
dp = Dispatcher(bot)

markup = ReplyKeyboardMarkup(resize_keyboard=True)

button_author = KeyboardButton("üèÜ–û–± –ê–≤—Ç–æ—Ä–µüèÜ")
button_start = KeyboardButton("üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µüëã")
button_help = KeyboardButton("‚ÑπÔ∏è–ü–æ–º–æ—â—å‚ÑπÔ∏è")

markup.add(button_author)
markup.add(button_start)
markup.add(button_help)

@dp.message_handler(commands='start')
async def start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–Ø –±–æ—Ç-–æ–∑–≤—É—á–∏–≤–∞—Ç–µ–ª—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–∑–≤—É—á–∫—É, –≤–≤–µ–¥–∏ /sound <—Ç–µ–∫—Å—Ç>\n\n‚ö†Ô∏è–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ‚ö†Ô∏è\n\n–û—Å—Ç–∞–ª—å–Ω–æ–µ —Å–º–æ—Ç—Ä–∏ –≤ /help, –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö!", reply_markup=markup)

@dp.message_handler(commands='sound')
async def sound(message: types.Message):
    filename = list(str(rand.random()) + ".mp3")
    data_raw = list(message.text)
    
    del filename[1]
    filename = "".join(filename)

    stopper = False

    data_raw.remove('/')
    data_raw.remove('s')
    data_raw.remove('o')
    data_raw.remove('u')
    data_raw.remove('n')
    data_raw.remove('d')

    try:
        del data_raw[0]
    except:
        stopper = True


    data = "".join(data_raw)

    if (data == " "):
        await message.answer('–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–º–æ—â–∏!')
    elif (stopper == True):
        await message.answer('–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–º–æ—â–∏!')
    else:
        tts = gTTS(data, lang="ru")

        with open(filename, "wb") as f:
            tts.write_to_fp(f)
            f.close()

        await message.answer(f"–í–∞—à —Ñ–∞–π–ª —Å –∫–æ–¥–æ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ {filename}, –∏ –¥–∞–Ω–Ω—ã–º–∏ \"{data}\" –≥–æ—Ç–æ–≤!")
        await message.answer("–û—Ç–ø—Ä–∞–≤–∫–∞...")

        with open(filename, 'rb') as f:
            await bot.send_document(message.chat.id, f)

        os.remove(filename)

@dp.message_handler(commands='help')
async def help(message: types.Message):
    await message.answer("***‚ö†Ô∏è –ü–æ–º–æ—â—å ‚ö†Ô∏è***\n\n/sound <–≤–∞—à —Ç–µ–∫—Å—Ç>\n\n*** –ü—Ä–∏–º–µ—Ä—ã ***\n/sound –ü—Ä–∏–≤–µ—Ç\n/sound –ö–∞–∫ –¥–µ–ª–∞")

@dp.message_handler(commands="author")
async def author(message: types.Message):
	markup_url = InlineKeyboardMarkup()
	button_author_url = InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –∞–≤—Ç–æ—Ä—É", url="t.me/bithoffka")

	markup_url.add(button_author_url)

	await bot.send_message(message.chat.id, "–°–¥–µ–ª–∞–Ω–æ @bithoffka –Ω–∞ Python", reply_markup=markup_url)
	await bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –±–æ—Ç–æ–º", reply_markup=markup)

@dp.message_handler()
async def handler(message: types.Message):
	text = message.text

	if text == "üëã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µüëã":
		await start(message)
	elif text == "üèÜ–û–± –ê–≤—Ç–æ—Ä–µüèÜ":
		await author(message)
	elif text == "‚ÑπÔ∏è–ü–æ–º–æ—â—å‚ÑπÔ∏è":
		await help(message)
	else:
		await message.answer("–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–º–æ—â–∏!")

if __name__ == '__main__':
    executor.start_polling(dp)
